What happens when you initialize a repository? Why do you need to do it?

	Git will create a .git hidden directory with some meta-data in it that
	describes the history of the repository. The initialization is required in
	order to create the required data structure for the repository.


How is the staging area different from the working directory and the repository?
What value do you think it offers?

	The staging area stores changes that are not part of the repository yet but
	once they are added they cannot be changed as if they were stored in the
	working folder.


How can you use the staging area to make sure you have one commit per logical
change?

	I can compare (git diff) the changes between my working directory and the
	staging area to make sure the next commit will contain exactly one logical
	change unit.


What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

	When adding new features or making experimental changes. When using branches
	I can make all the modifications I want without directly modifying the
	stable version of my work.


How do the diagrams help you visualize the branch structure?

	Committing is like following, or even better, building roads. Just like a
	map of the roads makes it easier to understand and navigate the roads, a
	diagram helps to understand and navigate through the branches.


What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

	The result is a merge commit with two parents. Because a merge is the result
	of joining two or more branches together.


What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges
manually?

	One pro is that I don't have to care about doing the merge. Most of the time
	it will be a pretty straight forward operation. Another pro is that the
	probability to introduce an error is reduced. The main con is that git can
	merge lines of code that are not designed to be merged, thus it may be
	posible to introduce errors. This could be mitigated to some extent by
	reviewing the contents of the merge commit.
